# =============================================================================
# QuatIca: Quaternion Linear Algebra Library - Dependencies
# =============================================================================
# 
# CRITICAL PERFORMANCE INFORMATION:
# - numpy>=2.3.2 is REQUIRED for optimal performance
# - numpy 2.3.2 provides 10-15x speedup for quaternion matrix operations
# - Using older numpy versions will result in significantly slower performance
# 
# INSTALLATION:
# 1. Create virtual environment: python3 -m venv venv
# 2. Activate it: source venv/bin/activate (Mac/Linux) or venv\Scripts\activate (Windows)
# 3. Install: pip install -r requirements.txt
# 
# VERIFICATION:
# After installation, run: python -c "import numpy; print(f'numpy: {numpy.__version__}')"
# Should show numpy version >= 2.3.2
# =============================================================================

# =============================================================================
# CORE DEPENDENCIES (REQUIRED)
# =============================================================================

# CRITICAL: numpy>=2.3.2 is required for optimal performance
# numpy 2.3.2 provides 10-15x speedup for quaternion matrix operations compared to 2.2.6
numpy>=2.3.2

# Quaternion mathematics library
numpy-quaternion>=2024.0.10

# Scientific computing and linear algebra
scipy>=1.16.1

# =============================================================================
# VISUALIZATION AND ANALYSIS (REQUIRED)
# =============================================================================

# Plotting and visualization
matplotlib>=3.10.3

# Machine learning and data analysis
scikit-learn>=1.5.0

# Statistical data visualization
seaborn>=0.13.0

# =============================================================================
# DEEP LEARNING (OPTIONAL - install manually if needed)
# =============================================================================
# NOTE: These packages can fail to install on some systems (e.g., Windows without
# long path support, or Python versions without prebuilt wheels). To keep the
# default installation robust, we do NOT install them by default.
# If you need them, install from PyTorch's official index after creating the venv:
#   CPU-only:
#     pip install torch torchvision --index-url https://download.pytorch.org/whl/cpu
#   CUDA 12.1 (example):
#     pip install torch torchvision --index-url https://download.pytorch.org/whl/cu121
# Also ensure Windows Long Path support is enabled if you use Windows.

# =============================================================================
# JUPYTER NOTEBOOK SUPPORT (OPTIONAL)
# =============================================================================
# NOTE: Jupyter is not included by default to keep the installation lightweight.
# If you plan to use Jupyter notebooks, install these packages after creating the venv:
#
#   pip install jupyter notebook jupyterlab ipykernel
#
# Then register the kernel:
#   python -m ipykernel install --user --name=quatica-venv --display-name="QuatIca (quatica-venv)"
#
# See the README.md "Jupyter Notebook Setup" section for complete instructions.
# =============================================================================

# =============================================================================
# PERFORMANCE WARNINGS
# =============================================================================
# 
# WARNING: The following packages cause significant performance degradation (3x slowdown)
# and are NOT included in requirements.txt to maintain optimal performance:
# 
# - opencv-python: Computer vision library (causes 3x slowdown)
# - tqdm: Progress bars (causes 3x slowdown)
# 
# These packages pull in heavy dependencies that affect numpy performance.
# If you need these for matrix completion features, install them separately:
# 
#   pip install opencv-python tqdm
# 
# But be aware of the performance cost.
# =============================================================================